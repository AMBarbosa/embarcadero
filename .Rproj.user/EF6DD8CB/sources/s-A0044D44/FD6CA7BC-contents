library(dismo)
library(fasterize)
library(maps)
library(raster)
library(rgdal)
library(rgeos)
library(sf)
library(velox)

library(BART)
library(embarcadero)

##### READ IN THE LAYERS

setwd('C:/Users/cjcar/Dropbox/Cbot_global2019/GIS/scaled')
asciis <- list.files(path='.', pattern='.asc')
preds <- stack(asciis)
preds <- preds[[c(1:nlayers(preds))[!(names(preds)=='mask')]]]

names(preds) <- gsub('_resample','',names(preds))

tox.a <- readOGR(dsn='C:/Users/cjcar/Dropbox/Cbot_global2019/GIS/Cbot_locations/toxin_types_shp',
                 layer='A_type')
tox.b <- readOGR(dsn='C:/Users/cjcar/Dropbox/Cbot_global2019/GIS/Cbot_locations/toxin_types_shp',
                 layer='B_type')
tox.c <- readOGR(dsn='C:/Users/cjcar/Dropbox/Cbot_global2019/GIS/Cbot_locations/toxin_types_shp',
                 layer='C_type')
tox.d <- readOGR(dsn='C:/Users/cjcar/Dropbox/Cbot_global2019/GIS/Cbot_locations/toxin_types_shp',
                 layer='D_type')
tox.e <- readOGR(dsn='C:/Users/cjcar/Dropbox/Cbot_global2019/GIS/Cbot_locations/toxin_types_shp',
                 layer='E_type')
tox.f <- readOGR(dsn='C:/Users/cjcar/Dropbox/Cbot_global2019/GIS/Cbot_locations/toxin_types_shp',
                 layer='F_type')

cbot <- rbind(tox.a, tox.b, tox.c, tox.d, tox.e, tox.f)



modelmaker <- function(pts.sp1) {

  pts.sp1$ones <- 1
  tmp=rasterize(pts.sp1, preds[[1]], field="ones", fun="min")
  model.points <- pts.sp1@coords
  names(model.points) <- c('longitude','latitude')
  npts <- nrow(model.points)

  ##### PSEUDOABSENCE MASK GENERATION

  world <- readOGR(dsn='C:/Users/cjcar/Dropbox/Cbot_global2019/GIS/World_shapefile',layer='gadm28_adm0')
  wgs <- world@proj4string
  pts.sp1@proj4string <- wgs
  w <- over(pts.sp1, world)
  cbot.countries <- world[(world$ISO %in% unique(w$ISO)),]
  tmp2=fasterize(st_as_sf(cbot.countries), preds[[1]])
  tmp2 <- tmp2/tmp2
  tmp3 <- sum(tmp2,tmp,na.rm=TRUE)
  tmp3[!(tmp3==1)]<-NA

  ##### PSEUDOABSENCE GENERATION

  absence <- randomPoints(tmp3,npts)
  absence <- data.frame(absence)

  ##### COMBINE DATA

  row1<-cbind(model.points,1)
  colnames(row1)<-c('x','y','b')
  row2<-cbind(data.frame(absence),0)
  colnames(row2)<-c('x','y','b')
  dataset.nosel <- rbind(row1,row2)

  sppts <- SpatialPointsDataFrame(dataset.nosel[,1:2],data.frame(dataset.nosel[,3]))

  for(i in 1:nlayers(preds)) {
    vx <- velox(preds[[i]])
    extr <- vx$extract_points(sp = sppts)
    dataset.nosel <- cbind(dataset.nosel, extr)

    vx$aggregate(factor=c(5,5), aggtype='mean')

    if (i == 1) {
      pred.big <- stack(vx$as.RasterLayer())
    } else {
      pred.big <- stack(pred.big,vx$as.RasterLayer())
    }

    print(i)
  }

  names(pred.big) <- names(preds)
  data.ns <- dataset.nosel
  colnames(data.ns) <- c('long','lat','resp',names(preds))
  return(data.ns)
}

input.data <- modelmaker(cbot)

bf <- lbart(input.data[,4:30],input.data[,3],nskip=50,ndpost=200)
hist(bf$prob.train.mean[input.data[,3]==1])
hist(bf$prob.train.mean[input.data[,3]==0])


preds.big <- aggregate(velox(preds, 16))

